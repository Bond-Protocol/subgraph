type OwnerBalance @entity {
    id: String!
    tokenId: BigInt!
    owner: String!
    balance: BigInt!
    network: String!
    bondToken: BondToken
}

type UniqueBonder @entity {
    id: String!
}

type BondToken @entity {
    id: String!
    underlying: Token!
    expiry: BigInt!
    teller: Bytes
    network: String!
    type: String!
}

type BondPurchase @entity {
    id: Bytes!
    marketId: String!
    owner: String!
    amount: BigDecimal!
    payout: BigDecimal!
    recipient: String!
    referrer: String!
    timestamp: BigInt!
    teller: String!
    auctioneer: String!
    payoutToken: Token!
    quoteToken: Token!
    network: String!
}

type Token @entity {
    id: String! # chain name_address
    network: String!
    address: String! # address
    decimals: BigInt!
    symbol: String!
    name: String!
    lpPair: Pair
}

type Market @entity {
    id: String! # chain name_contract name_market id
    name: String!
    network: String!
    auctioneer: Bytes! # address
    teller: Bytes! # address
    marketId: BigInt!
    owner: String! # address
    payoutToken: Token!
    quoteToken: Token!
    vesting: BigInt!
    vestingType: String!
    isLive: Boolean!
    isInstantSwap: Boolean!
    totalBondedAmount: BigDecimal!
    totalPayoutAmount: BigDecimal!
    scaleAdjustment: BigInt!
    creationBlockTimestamp: BigInt!
}

type Pair @entity {
    id: String! # address
    token0: Token!
    token1: Token!
}
